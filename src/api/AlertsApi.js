/*
 * Ukraine Alert API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * Contact: support@stfalcon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {AlertModification} from '../model/AlertModification';
import {AlertRegionModel} from '../model/AlertRegionModel';
import {RegionAlarmsHistory} from '../model/RegionAlarmsHistory';

/**
* Alerts service.
* @module api/AlertsApi
* @version 3.0
*/
export class AlertsApi {

    /**
    * Constructs a new AlertsApi. 
    * @alias module:api/AlertsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV3AlertsGet operation.
     * @callback moduleapi/AlertsApi~apiV3AlertsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AlertRegionModel>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Області, регіони та громади з тривогами
     * @param {module:api/AlertsApi~apiV3AlertsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV3AlertsGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [AlertRegionModel];

      return this.apiClient.callApi(
        '/api/v3/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV3AlertsRegionHistoryGet operation.
     * @callback moduleapi/AlertsApi~apiV3AlertsRegionHistoryGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/RegionAlarmsHistory>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Отримати останніх 25 тривог регіону
     * @param {Object} opts Optional parameters
     * @param {String} opts.regionId 
     * @param {module:api/AlertsApi~apiV3AlertsRegionHistoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV3AlertsRegionHistoryGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'regionId': opts['regionId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [RegionAlarmsHistory];

      return this.apiClient.callApi(
        '/api/v3/alerts/regionHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV3AlertsRegionIdGet operation.
     * @callback moduleapi/AlertsApi~apiV3AlertsRegionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AlertRegionModel>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Статус області/регіону/громади
     * @param {String} regionId ID області/регіону/громади
     * @param {module:api/AlertsApi~apiV3AlertsRegionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV3AlertsRegionIdGet(regionId, callback) {
      
      let postBody = null;
      // verify the required parameter 'regionId' is set
      if (regionId === undefined || regionId === null) {
        throw new Error("Missing the required parameter 'regionId' when calling apiV3AlertsRegionIdGet");
      }

      let pathParams = {
        'regionId': regionId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [AlertRegionModel];

      return this.apiClient.callApi(
        '/api/v3/alerts/{regionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV3AlertsStatusGet operation.
     * @callback moduleapi/AlertsApi~apiV3AlertsStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlertModification{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Перевірка номеру останньої дії. Використовувати для перевірки необхідності оновлювати дані
     * @param {module:api/AlertsApi~apiV3AlertsStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV3AlertsStatusGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlertModification;

      return this.apiClient.callApi(
        '/api/v3/alerts/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}